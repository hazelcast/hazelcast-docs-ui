<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/@algolia/autocomplete-theme-classic@1.19.2/dist/theme.min.css"
  integrity="sha256-4Wtj6dqgMBT/Ji+vI49GON0NbfDlaJH06SUD7TH4yYg="
  crossorigin="anonymous"
/>
<script src="https://cdn.jsdelivr.net/npm/algoliasearch@5.30.0/dist/lite/builds/browser.umd.js" integrity="sha256-w/rbJ5CGTW5rub22bQ/VEoIHxypNh4NZPdkIJvGMZlI=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@4.79.0/dist/instantsearch.production.min.js" integrity="sha256-FOU2owonNoOmNxF4I8jLR4D8w/vziYNi64GUN2boXRQ=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@algolia/autocomplete-js@1"></script>

{{#if page.component}}
  <script>
    (() => {
      const UI_TYPE = {
        ITEM: 0,
        HEADING: 1,
        SUBITEM: 2,
        LAST_SUBITEM: 3,
      };
      const getArticleSVG = (html) => html`
        <div class="aa-ItemIcon aa-ItemArticleIcon">
          <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14 2H6C4.9 2 4 2.9 4 4V20C4 21.1 4.9 22 6 22H18C19.1 22 20 21.1 20 20V8L14 2Z" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M14 2V8H20" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M16 13H8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            <path d="M16 17H8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            <path d="M10 9H8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </div>`

      const getMiddleSubitemSVG = (html) => html`
        <div class="aa-ItemIcon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 35 100" width="20" height="100">
            <line x1="0" y1="0" x2="0" y2="100" stroke="currentColor" stroke-width="6" stroke-linecap="round" />
            <line x1="0" y1="50" x2="35" y2="50" stroke="currentColor" stroke-width="6" stroke-linecap="round" />
          </svg>
        </div>
      `

      const getEndSubitemSVG = (html) => html`
        <div class="aa-ItemIcon">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 35 100" width="20" height="50">
            <line x1="0" y1="0" x2="0" y2="70" stroke="currentColor" stroke-width="6" stroke-linecap="round" />
            <line x1="0" y1="70" x2="35" y2="70" stroke="currentColor" stroke-width="6" stroke-linecap="round" />
          </svg>
        </div>
      `

      const { autocomplete, getAlgoliaResults } = window['@algolia/autocomplete-js'];
      const { liteClient: algoliasearch } = window['algoliasearch/lite'];
      const ALL_COMPONENTS_TITLE = 'All';
      const ALL_VERSIONS_TITLE = 'All Versions';
      const initialFacet = [{ title: ALL_COMPONENTS_TITLE, versions: ['default'], latestVersion: 'default' }];
      let currentComponent = '{{page.component.title}}';
      if (currentComponent === 'Home') {
        currentComponent = ALL_COMPONENTS_TITLE;
      }
      let currentVersion = '{{page.displayVersion}}';

      const componentVersions = [
        ...window.UTILS.parseHbsJsonString(
          '{{get-facets-from-components (sort-components site.components 'name' page.attributes.component-order) @root.page}}'
        ),
        ...initialFacet,
      ];

      const getComponentOptions = (html) => componentVersions
        .map(({ title }) => title === currentComponent
          ? html`<option value="${title}" selected>${title}</option>`
          : html`<option value="${title}">${title}</option>`);

      const getComponentVersionOptions = (html) => {
        let versions = componentVersions.find(({ title }) => title === currentComponent)?.versions || []
        if (versions.length > 1) {
          versions = versions.concat([ALL_VERSIONS_TITLE])
        }
        return versions.map(version => version === currentVersion
            ? html`<option value="${version}" selected>${version}</option>`
            : html`<option value="${version}">${version}</option>`);
      }

      const getAllComponentsLatestVersionsFacets = () => componentVersions
        .map(({ title, latestVersion }) => `componentVersion:${title}_${latestVersion}`);

      const getAllComponentsVersionsFacets = () => componentVersions
        .find(({ title }) => title === currentComponent).versions
        .map(version => `componentVersion:${currentComponent}_${version}`);

      const getFacetFilters = () => {
        return currentComponent === ALL_COMPONENTS_TITLE
          ? getAllComponentsLatestVersionsFacets()
          : currentVersion === ALL_VERSIONS_TITLE ?
            getAllComponentsVersionsFacets()
            : [`componentVersion:${currentComponent}_${currentVersion}`];
      };

      function flatten(values) {
        return values.reduce((a, b) => {
          return a.concat(b);
        }, []);
      }

      function normalizeReshapeSources(sources) {
        return flatten(sources).filter(Boolean);
      }

      const groupBy = (predicate, options) => {
        return function runGroupBy(...rawSources) {
          const sources = normalizeReshapeSources(rawSources);

          if (sources.length === 0) {
            return [];
          }

          // Since we create multiple sources from a single one, we take the first one
          // as reference to create the new sources from.
          const referenceSource = sources[0];
          const items = flatten(sources.map((source) => source.getItems()));
          const groupedItems = items.reduce((acc, item) => {
            const key = predicate(item);

            if (!acc.hasOwnProperty(key)) {
              acc[key] = [];
            }

            acc[key].push(item);

            return acc;
          }, {});

          return Object.entries(groupedItems).map(([groupName, groupItems]) => {
            const userSource = options.getSource({
              name: groupName,
              items: groupItems,
            });

            return {
              ...referenceSource,
              sourceId: groupName,
              getItems() {
                return groupItems;
              },
              ...userSource,
              templates: {
                ...referenceSource.templates,
                ...userSource.templates,
              },
            };
          });
        };
      };

      const searchClient = algoliasearch('{{site.keys.docsearchId}}', '{{site.keys.docsearchApi}}');

      const groupByProduct = groupBy((hit) => hit.componentVersion.split('_')[0], {
        getSource({ name, items }) {
          return {
            getItems() {
              console.log('items', items);
              const sorted = items.sort((a, b) => `${a.title}${a.type}${a.componentVersion}`.localeCompare(`${b.title}${b.type}${a.componentVersion}`))
              let prevIndex = 0;
              const grouped = sorted.reduce((acc, next) => {
                // if is subitem
                if (acc.length > 0 && acc[prevIndex].title === next.title && acc[prevIndex].componentVersion === next.componentVersion) {
                  // if is immediate subitem
                  if (acc[acc.length - 1].uiType === UI_TYPE.ITEM) {
                    acc[prevIndex].uiType = UI_TYPE.SUBITEM;
                    acc.splice(prevIndex, 0, { ...sorted[prevIndex], uiType: UI_TYPE.HEADING });
                    acc.push({ ...next, uiType: UI_TYPE.LAST_SUBITEM });
                  // if second or > subitem
                  } else {
                    acc[acc.length - 1].uiType = UI_TYPE.SUBITEM;
                    acc.push({ ...next, uiType: UI_TYPE.LAST_SUBITEM });
                  }
                } else {
                  acc.push({ ...next, uiType: UI_TYPE.ITEM });
                  prevIndex = acc.length - 1;
                }
                return acc;
              }, [])
              return grouped;
            },
            templates: {
              header({ html }) {
                return currentComponent === ALL_COMPONENTS_TITLE ? html`
                <span class="aa-SourceHeaderTitle">${name}</span>
              ` : '';
              },
            },
          };
        },
      });

      const {
        refresh,
        setIsOpen,
      } = autocomplete({
        container: '#search-input',
        cancelButtonText: 'Close',
        openOnFocus: true,
        defaultActiveItemId: 0,
        detachedMediaQuery: '',
        reshape({ sourcesBySourceId }) {
          const { algolia, ...rest } =
            sourcesBySourceId;
          const groupedSources = groupByProduct(algolia);
          // if there are no sources, return the default algolia source, to show the "No Results" template
          const resultingSources = groupedSources.length > 0 ? groupedSources : algolia;
          return [
            resultingSources,
            Object.values(rest),
          ];
        },
        getSources({ query }) {
          // @TODO: add to algolia config
          return query.length < 2 ? [] : [
            {
              sourceId: 'algolia',
              getItems() {
                return getAlgoliaResults({
                  searchClient,
                  queries: [
                    {
                      indexName: '{{site.keys.docsearchIndex}}',
                      params: {
                        query,
                        hitsPerPage: 10,
                        facetFilters: [getFacetFilters()],
                        attributesToSnippet: ['title:10', 'content:35'],
                        snippetEllipsisText: 'â€¦',
                      },
                    },
                  ],
                });
              },
              templates: {
                item({ item, components, html }) {
                  const version = item.componentVersion ? item.componentVersion.split('_')[1] : '';
                  const showVersion = currentVersion === ALL_VERSIONS_TITLE && version && version !== 'default';
                  return html`
            <a class="aa-ItemLink" href="${item.uiType === UI_TYPE.HEADING ? item.url.split('#')[0] : item.url}" target="_self">
              <div class="aa-ItemWrapper">
                <div class="aa-ItemContent">
                  ${item.uiType === UI_TYPE.SUBITEM
                    ? getMiddleSubitemSVG(html)
                    : item.uiType === UI_TYPE.LAST_SUBITEM
                      ? getEndSubitemSVG(html) : getArticleSVG(html)}
                    <div class="aa-ItemContentBody">
                    ${item.uiType === UI_TYPE.HEADING || item.uiType === UI_TYPE.ITEM ? html`
                      <h4 class="aa-ItemContentTitle">
                        <span>${components.Highlight({ hit: item, attribute: 'title' })}</span>
                      </h4>
                    ` : ''}
                      ${item.uiType === UI_TYPE.HEADING || !item.section ? '' : html`
                        <h5 class="aa-ItemContentSection">
                            <span>${components.Highlight({hit: item, attribute: 'section'})}</span>
                        </h5>
                      `}
                      ${item.uiType === UI_TYPE.HEADING ? '' :
                        html`<p class="aa-ItemContentDescription">
                          ${components.Snippet({hit: item, attribute: 'content'})}
                        </p>`}
                      ${item.uiType === UI_TYPE.HEADING || item.uiType === UI_TYPE.ITEM ? html`
                        <div class="aa-ItemContentBreadcrumbs">
                          ${item.breadcrumbs ? item.breadcrumbs.join(' > ') : ''}
                        </div>
                      ` : ''}
                    </div>
                    ${showVersion ? html`
                      <div class="aa-ItemVersion">
                        ${version}
                      </div>
                    ` : ''}
                  </div>
                </div>
              </a>`;
                },
                noResults({ html, state }) {
                  return html`
                    <svg viewBox="0 0 20 20" fill="none" class="aa-NoResultsIcon"><path d="M15.5 4.8c2 3 1.7 7-1 9.7h0l4.3 4.3-4.3-4.3a7.8 7.8 0 01-9.8 1m-2.2-2.2A7.8 7.8 0 0113.2 2.4M2 18L18 2"></path></svg>
                    <p class="aa-NoResultsMessage">No results found for <strong>${state.query}</strong>.</p>
                    <p class="aa-NoResultsNote">You could try expanding your search terms or asking AI...</p>
                  `;
                },
              },
              getItemUrl({ item }) {
                return item.url;
              },
            },
          ];
        },
        render({ elements, render, html, state }, root) {
          const dataSources = Object.values(elements);

          render(
            html`
            <div class="aa-PanelLayout aa-Panel--scrollable">
              <div class="aa-PanelSection aa-PanelSection--top">
                <div class="aa--ComponentVersionPicker">
                  <div class="select aa-ComponentSelect">
                    <select id="componentSelect">
                      ${getComponentOptions(html)}
                    </select>
                    <span class="focus"></span>
                  </div>
                  ${getComponentVersionOptions(html).length > 1 ? html`<div class="select aa-VersionSelect">
                    <select id="componentVersionSelect">
                      ${getComponentVersionOptions(html)}
                    </select>
                    <span class="focus"></span>
                  </div>` : ''}
                </div>
                ${ window.Kapa ? html`
                <button id="askAIBtn" class="aa-AskAIBtn">
                  <img class="aa-AskAIIcon" src="{{{uiRootPath}}}/img/kapa/ask-ai-icon.svg" alt="ask ai" />
                  <span class="aa-AskAIHeading">Ask AI${state.query ? html` about "${state.query}"` : html``}</span>
                </button>` : ''}
              </div>
              ${dataSources.length > 0 ? html`
                <div class="aa-PanelSection aa-PanelSection--bottom">
                  ${dataSources}
                </div>` : html`
                <div class="aa-ImagePlaceholder">
                  <img class="aa-ImagePlaceholderImage" src="{{{uiRootPath}}}/img/hazelcast-logo-original.svg" alt="hazelcast" />
                </div>`}
            </div>
            <div class="aa-PanelFooter">
              <div class="aa-KeyboardShortcuts">
                <kbd class="aa-Key">â†µ</kbd>
                <span class="aa-KeyLabel">to select</span>
                <kbd class="aa-Key">â†‘</kbd>
                <kbd class="aa-Key">â†“</kbd>
                <span class="aa-KeyLabel">to navigate</span>
                <kbd class="aa-Key">esc</kbd>
                <span class="aa-KeyLabel">to close</span>
              </div>
              <div class="aa-AlgoliaLogo">
                <span class="aa-AlgoliaText">Search by</span>
                <svg viewBox="0 0 2196.2 500" class="aa-AlgoliaIcon" aria-label="Algolia">
                  <path fill="#003dff" fill-rule="evenodd" d="M1070.38,275.3V5.91c0-3.63-3.24-6.39-6.82-5.83l-50.46,7.94c-2.87,.45-4.99,2.93-4.99,5.84l.17,273.22c0,12.92,0,92.7,95.97,95.49,3.33,.1,6.09-2.58,6.09-5.91v-40.78c0-2.96-2.19-5.51-5.12-5.84-34.85-4.01-34.85-47.57-34.85-54.72Z"></path><rect fill="#003dff" x="1845.88" y="104.73" width="62.58" height="277.9" rx="5.9" ry="5.9"></rect><path fill="#003dff" fill-rule="evenodd" d="M1851.78,71.38h50.77c3.26,0,5.9-2.64,5.9-5.9V5.9c0-3.62-3.24-6.39-6.82-5.83l-50.77,7.95c-2.87,.45-4.99,2.92-4.99,5.83v51.62c0,3.26,2.64,5.9,5.9,5.9Z"></path><path fill="#003dff" fill-rule="evenodd" d="M1764.03,275.3V5.91c0-3.63-3.24-6.39-6.82-5.83l-50.46,7.94c-2.87,.45-4.99,2.93-4.99,5.84l.17,273.22c0,12.92,0,92.7,95.97,95.49,3.33,.1,6.09-2.58,6.09-5.91v-40.78c0-2.96-2.19-5.51-5.12-5.84-34.85-4.01-34.85-47.57-34.85-54.72Z"></path><path fill="#003dff" fill-rule="evenodd" d="M1631.95,142.72c-11.14-12.25-24.83-21.65-40.78-28.31-15.92-6.53-33.26-9.85-52.07-9.85-18.78,0-36.15,3.17-51.92,9.85-15.59,6.66-29.29,16.05-40.76,28.31-11.47,12.23-20.38,26.87-26.76,44.03-6.38,17.17-9.24,37.37-9.24,58.36,0,20.99,3.19,36.87,9.55,54.21,6.38,17.32,15.14,32.11,26.45,44.36,11.29,12.23,24.83,21.62,40.6,28.46,15.77,6.83,40.12,10.33,52.4,10.48,12.25,0,36.78-3.82,52.7-10.48,15.92-6.68,29.46-16.23,40.78-28.46,11.29-12.25,20.05-27.04,26.25-44.36,6.22-17.34,9.24-33.22,9.24-54.21,0-20.99-3.34-41.19-10.03-58.36-6.38-17.17-15.14-31.8-26.43-44.03Zm-44.43,163.75c-11.47,15.75-27.56,23.7-48.09,23.7-20.55,0-36.63-7.8-48.1-23.7-11.47-15.75-17.21-34.01-17.21-61.2,0-26.89,5.59-49.14,17.06-64.87,11.45-15.75,27.54-23.52,48.07-23.52,20.55,0,36.63,7.78,48.09,23.52,11.47,15.57,17.36,37.98,17.36,64.87,0,27.19-5.72,45.3-17.19,61.2Z"></path><path fill="#003dff" fill-rule="evenodd" d="M894.42,104.73h-49.33c-48.36,0-90.91,25.48-115.75,64.1-14.52,22.58-22.99,49.63-22.99,78.73,0,44.89,20.13,84.92,51.59,111.1,2.93,2.6,6.05,4.98,9.31,7.14,12.86,8.49,28.11,13.47,44.52,13.47,1.23,0,2.46-.03,3.68-.09,.36-.02,.71-.05,1.07-.07,.87-.05,1.75-.11,2.62-.2,.34-.03,.68-.08,1.02-.12,.91-.1,1.82-.21,2.73-.34,.21-.03,.42-.07,.63-.1,32.89-5.07,61.56-30.82,70.9-62.81v57.83c0,3.26,2.64,5.9,5.9,5.9h50.42c3.26,0,5.9-2.64,5.9-5.9V110.63c0-3.26-2.64-5.9-5.9-5.9h-56.32Zm0,206.92c-12.2,10.16-27.97,13.98-44.84,15.12-.16,.01-.33,.03-.49,.04-1.12,.07-2.24,.1-3.36,.1-42.24,0-77.12-35.89-77.12-79.37,0-10.25,1.96-20.01,5.42-28.98,11.22-29.12,38.77-49.74,71.06-49.74h49.33v142.83Z"></path><path fill="#003dff" fill-rule="evenodd" d="M2133.97,104.73h-49.33c-48.36,0-90.91,25.48-115.75,64.1-14.52,22.58-22.99,49.63-22.99,78.73,0,44.89,20.13,84.92,51.59,111.1,2.93,2.6,6.05,4.98,9.31,7.14,12.86,8.49,28.11,13.47,44.52,13.47,1.23,0,2.46-.03,3.68-.09,.36-.02,.71-.05,1.07-.07,.87-.05,1.75-.11,2.62-.2,.34-.03,.68-.08,1.02-.12,.91-.1,1.82-.21,2.73-.34,.21-.03,.42-.07,.63-.1,32.89-5.07,61.56-30.82,70.9-62.81v57.83c0,3.26,2.64,5.9,5.9,5.9h50.42c3.26,0,5.9-2.64,5.9-5.9V110.63c0-3.26-2.64-5.9-5.9-5.9h-56.32Zm0,206.92c-12.2,10.16-27.97,13.98-44.84,15.12-.16,.01-.33,.03-.49,.04-1.12,.07-2.24,.1-3.36,.1-42.24,0-77.12-35.89-77.12-79.37,0-10.25,1.96-20.01,5.42-28.98,11.22-29.12,38.77-49.74,71.06-49.74h49.33v142.83Z"></path><path fill="#003dff" fill-rule="evenodd" d="M1314.05,104.73h-49.33c-48.36,0-90.91,25.48-115.75,64.1-11.79,18.34-19.6,39.64-22.11,62.59-.58,5.3-.88,10.68-.88,16.14s.31,11.15,.93,16.59c4.28,38.09,23.14,71.61,50.66,94.52,2.93,2.6,6.05,4.98,9.31,7.14,12.86,8.49,28.11,13.47,44.52,13.47h0c17.99,0,34.61-5.93,48.16-15.97,16.29-11.58,28.88-28.54,34.48-47.75v50.26h-.11v11.08c0,21.84-5.71,38.27-17.34,49.36-11.61,11.08-31.04,16.63-58.25,16.63-11.12,0-28.79-.59-46.6-2.41-2.83-.29-5.46,1.5-6.27,4.22l-12.78,43.11c-1.02,3.46,1.27,7.02,4.83,7.53,21.52,3.08,42.52,4.68,54.65,4.68,48.91,0,85.16-10.75,108.89-32.21,21.48-19.41,33.15-48.89,35.2-88.52V110.63c0-3.26-2.64-5.9-5.9-5.9h-56.32Zm0,64.1s.65,139.13,0,143.36c-12.08,9.77-27.11,13.59-43.49,14.7-.16,.01-.33,.03-.49,.04-1.12,.07-2.24,.1-3.36,.1-1.32,0-2.63-.03-3.94-.1-40.41-2.11-74.52-37.26-74.52-79.38,0-10.25,1.96-20.01,5.42-28.98,11.22-29.12,38.77-49.74,71.06-49.74h49.33Z"></path><path fill="#003dff" d="M249.83,0C113.3,0,2,110.09,.03,246.16c-2,138.19,110.12,252.7,248.33,253.5,42.68,.25,83.79-10.19,120.3-30.03,3.56-1.93,4.11-6.83,1.08-9.51l-23.38-20.72c-4.75-4.21-11.51-5.4-17.36-2.92-25.48,10.84-53.17,16.38-81.71,16.03-111.68-1.37-201.91-94.29-200.13-205.96,1.76-110.26,92-199.41,202.67-199.41h202.69V407.41l-115-102.18c-3.72-3.31-9.42-2.66-12.42,1.31-18.46,24.44-48.53,39.64-81.93,37.34-46.33-3.2-83.87-40.5-87.34-86.81-4.15-55.24,39.63-101.52,94-101.52,49.18,0,89.68,37.85,93.91,85.95,.38,4.28,2.31,8.27,5.52,11.12l29.95,26.55c3.4,3.01,8.79,1.17,9.63-3.3,2.16-11.55,2.92-23.58,2.07-35.92-4.82-70.34-61.8-126.93-132.17-131.26-80.68-4.97-148.13,58.14-150.27,137.25-2.09,77.1,61.08,143.56,138.19,145.26,32.19,.71,62.03-9.41,86.14-26.95l150.26,133.2c6.44,5.71,16.61,1.14,16.61-7.47V9.48C499.66,4.25,495.42,0,490.18,0H249.83Z"></path>
                </svg>
              </div>
            </div>`,
            root
          );
        },
      });

      document.addEventListener('mousedown', (event) => {
        if (event.target.id === 'componentSelect' || event.target.id === 'componentVersionSelect') {
          event.stopImmediatePropagation();
        } else if (event.target.id === 'askAIBtn' || event.target.parentNode.id === 'askAIBtn') {
          event.preventDefault();
          window.Kapa.open({ query: document.querySelector('input.aa-Input').value });
          setIsOpen(false);
        }
      }, true);

      document.addEventListener('change', (event) => {
        if (event.target.id === 'componentSelect') {
          currentComponent = event.target.value;
          currentVersion = componentVersions.find(({ title }) => title === currentComponent).latestVersion;
          refresh();
        } else if (event.target.id === 'componentVersionSelect') {
          currentVersion = event.target.value;
          refresh();
        }
      });
    })()
  </script>
{{/if}}
