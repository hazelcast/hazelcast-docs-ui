<script src="{{{uiRootPath}}}/js/site.js"></script>
<script async src="{{{uiRootPath}}}/js/vendor/highlight.js"></script>
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/@algolia/autocomplete-theme-classic@1.19.2/dist/theme.min.css"
  integrity="sha256-4Wtj6dqgMBT/Ji+vI49GON0NbfDlaJH06SUD7TH4yYg="
  crossorigin="anonymous"
/>
<script src="https://cdn.jsdelivr.net/npm/algoliasearch@5.30.0/dist/lite/builds/browser.umd.js" integrity="sha256-w/rbJ5CGTW5rub22bQ/VEoIHxypNh4NZPdkIJvGMZlI=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/instantsearch.js@4.79.0/dist/instantsearch.production.min.js" integrity="sha256-FOU2owonNoOmNxF4I8jLR4D8w/vziYNi64GUN2boXRQ=" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@algolia/autocomplete-js@1"></script>

<script>
  const { autocomplete, getAlgoliaResults, getAlgoliaFacets } = window['@algolia/autocomplete-js'];
  const { liteClient: algoliasearch } = window['algoliasearch/lite'];

  window.CURRENT_ALGOLIA_FACETS = {};
  window.SELECTED_FACETS = {};

  const getFacetFilters = () => {
    return Object.keys(window.SELECTED_FACETS)
      .reduce((acc, key) => {
        const values = Object.keys(window.SELECTED_FACETS[key])
          .filter(value => window.SELECTED_FACETS[key][value])
          .map((value) => `${key}:${value}`);
        acc.push(...values);
        return acc;
      }, []);
  };

  const updateFacetState = () => {
    Object.keys(window.CURRENT_ALGOLIA_FACETS).forEach(key => {
      if (!window.SELECTED_FACETS[key]) {
        window.SELECTED_FACETS[key] = {};
      }
      Object.keys(window.CURRENT_ALGOLIA_FACETS[key]).forEach(name => {
        if (!(name in window.SELECTED_FACETS[key])) {
          window.SELECTED_FACETS[key][name] = false;
        }
      });
    });
  };

  const searchClient = algoliasearch('{{site.keys.docsearchId}}', '{{site.keys.docsearchApi}}');

  const {
    refresh,
  } = autocomplete({
    container: '#search-input',
    placeholder: 'Search',
    openOnFocus: true,
    defaultActiveItemId: 0,
    getSources({ query }) {
      return [
        {
          sourceId: 'algolia',
          getItems() {
            return getAlgoliaResults({
              searchClient,
              transformResponse({ results, hits }) {
                window.CURRENT_ALGOLIA_FACETS = results[0]?.facets || {};
                updateFacetState();
                return hits;
              },
              queries: [
                {
                  indexName: '{{site.keys.docsearchIndex}}',
                  params: {
                    query,
                    hitsPerPage: 5,
                    facets: ['product', 'version'],
                    facetFilters: getFacetFilters(),
                    attributesToSnippet: ['title:10', 'content:35'],
                    snippetEllipsisText: 'â€¦',
                  },
                },
              ],
            });
          },
          templates: {
            header({ html }) {
              return html`
                <div class="facet-filters">
                  ${Object.keys(window.CURRENT_ALGOLIA_FACETS).map(key =>
                    html`<h4 class="capitalize">${key}</h4>
                   <ul>
                     ${Object.keys(window.CURRENT_ALGOLIA_FACETS[key]).map(name => {
                       const isChecked = window.SELECTED_FACETS[key] && window.SELECTED_FACETS[key][name] === true;
                       console.log(`Rendering ${key}:${name}, isChecked: ${isChecked}, value: ${window.SELECTED_FACETS[key] && window.SELECTED_FACETS[key][name]}`);

                       return html`<li>
                           <label>
                             ${isChecked ? html`<input
                               type="checkbox"
                               name="${key}"
                               id="${name}"
                               data-facet-key="${key}"
                               data-facet-value="${name}"
                               checked
                             />` : html`<input
                               type="checkbox"
                               name="${key}"
                               id="${name}"
                               data-facet-key="${key}"
                               data-facet-value="${name}"
                             />`}
                             ${name}
                           </label>
                         </li>`;
                     })}
                   </ul>`
                  )}
                </div>
              `;
            },
            item({ item, components, html }) {
              return html`
              <div class="aa-ItemWrapper">
                <div class="aa-ItemContent">
                  <div class="aa-ItemIcon">
                    <svg viewBox="0 0 20 20" width="20" height="20">
                      <path d="m14.386 14.386 4.088 4.088-4.088-4.088A7.533 7.533 0 1 1 3.733 3.733a7.533 7.533 0 0 1 10.653 10.653z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg>
                  </div>
                  <div class="aa-ItemContentBody">
                    <div class="aa-ItemContentTitle">
                      ${components.Highlight({ hit: item, attribute: 'title' })}
                    </div>
                    <div class="aa-ItemContentDescription">
                      ${components.Snippet({ hit: item, attribute: 'content' })}
                    </div>
                  </div>
                </div>
              </div>`;
            },
          },
          getItemUrl({ item }) {
            return item.url;
          },
        },
      ];
    },
    // render({ children, render }, root) {
    //   console.log(root);
    //   render(children, root);
    // },
  });

  document.addEventListener('change', function(event) {
    if (event.target.type === 'checkbox' && event.target.dataset.facetKey) {
      const facetKey = event.target.dataset.facetKey;
      const facetValue = event.target.dataset.facetValue;

      if (!window.SELECTED_FACETS[facetKey]) {
        window.SELECTED_FACETS[facetKey] = {};
      }

      window.SELECTED_FACETS[facetKey][facetValue] = event.target.checked;

      if (refresh) {
        refresh();
      }
    }
  });
</script>

<script>
  // Mobile Menu
  document.addEventListener('DOMContentLoaded', function () {
    const burger = document.getElementById('burger');
    const menu = document.getElementById('menu-holder');
    const closeBtn = document.getElementById('menu-close');

    if (burger && menu && closeBtn) {
      burger.addEventListener('click', function () {
        menu.classList.add('active');
        burger.style.display = 'none';
        document.body.style.overflow = 'hidden';
      });

      closeBtn.addEventListener('click', function () {
        menu.classList.remove('active');
        burger.style.display = 'flex';
        document.body.style.overflow = '';
      });

      // Reset burger on resize
      window.addEventListener('resize', function () {
        if (window.innerWidth > 1100) {
          burger.style.display = ''; // Remove inline style so CSS takes over
          menu.classList.remove('active');
          document.body.style.overflow = '';
        }
      });
    }
  });
</script>
<script>
  feather.replace();
</script>
